services:
  postgres:
    image: postgres:15-alpine
    container_name: mmd_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mmd_network
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mmd_app
    restart: unless-stopped
    env_file:
      - .env.development
    ports:
      - "8000:8000"
    volumes:
      - ./model_cache:/app/model_cache
      - "${HOME}/.aws:/home/appuser/.aws:ro"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mmd_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  mmd_network:
    driver: bridge